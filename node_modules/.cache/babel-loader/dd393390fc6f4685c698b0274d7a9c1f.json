{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { Controller } from \"stimulus\";\n\nvar _default = /*#__PURE__*/function (_Controller) {\n  _inherits(_default, _Controller);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"connect\",\n    value: function connect() {\n      this.interval();\n    }\n  }, {\n    key: \"interval\",\n    value: function interval() {\n      var controller = this;\n      setInterval(function () {\n        controller.showSpin();\n        controller.request();\n      }, 5000);\n    }\n  }, {\n    key: \"request\",\n    value: function request() {\n      var _this = this;\n\n      var controller = this;\n      fetch(this.urlValue).then(function (response) {\n        return response.text();\n      }).then(function (html) {\n        _this.statisticCardsTarget.innerHTML = html;\n        controller.hideSpin();\n      });\n    }\n  }, {\n    key: \"showSpin\",\n    value: function showSpin() {\n      this.buttonSpinTarget.classList.replace('hidden', 'block');\n      this.statisticCardsTarget.classList.add('hidden');\n    }\n  }, {\n    key: \"hideSpin\",\n    value: function hideSpin() {\n      this.buttonSpinTarget.classList.replace('block', 'hidden');\n      this.statisticCardsTarget.classList.remove('hidden');\n    }\n  }]);\n\n  return _default;\n}(Controller);\n\n_default.targets = ['buttonSpin', 'statisticCards'];\n_default.values = {\n  url: String\n};\nexport { _default as default };","map":{"version":3,"sources":["/home/matias/Documentos/prueba-disruptive/app/javascript/controllers/request_controller.js"],"names":["Controller","interval","controller","setInterval","showSpin","request","fetch","urlValue","then","response","text","html","statisticCardsTarget","innerHTML","hideSpin","buttonSpinTarget","classList","replace","add","remove","targets","values","url","String"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,UAA3B;;;;;;;;;;;;;;;WAME,mBAAU;AACR,WAAKC,QAAL;AACD;;;WAED,oBAAU;AACR,UAAIC,UAAU,GAAG,IAAjB;AACAC,MAAAA,WAAW,CAAC,YAAU;AACpBD,QAAAA,UAAU,CAACE,QAAX;AACAF,QAAAA,UAAU,CAACG,OAAX;AACF,OAHW,EAGT,IAHS,CAAX;AAID;;;WAED,mBAAS;AAAA;;AACP,UAAIH,UAAU,GAAG,IAAjB;AACAI,MAAAA,KAAK,CAAC,KAAKC,QAAN,CAAL,CACCC,IADD,CACM,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OADN,EAECF,IAFD,CAEM,UAACG,IAAD,EAAU;AACd,QAAA,KAAI,CAACC,oBAAL,CAA0BC,SAA1B,GAAsCF,IAAtC;AACAT,QAAAA,UAAU,CAACY,QAAX;AACD,OALD;AAMD;;;WAED,oBAAU;AACR,WAAKC,gBAAL,CAAsBC,SAAtB,CAAgCC,OAAhC,CAAwC,QAAxC,EAAkD,OAAlD;AACA,WAAKL,oBAAL,CAA0BI,SAA1B,CAAoCE,GAApC,CAAwC,QAAxC;AACD;;;WAED,oBAAU;AACR,WAAKH,gBAAL,CAAsBC,SAAtB,CAAgCC,OAAhC,CAAwC,OAAxC,EAAiD,QAAjD;AACA,WAAKL,oBAAL,CAA0BI,SAA1B,CAAoCG,MAApC,CAA2C,QAA3C;AACD;;;;EAlC0BnB,U;;SACpBoB,O,GAAU,CAAC,YAAD,EAAe,gBAAf,C;SACVC,M,GAAU;AAAEC,EAAAA,GAAG,EAAEC;AAAP,C","sourcesContent":["import { Controller } from \"stimulus\"\n\nexport default class extends Controller {\n  static targets = ['buttonSpin', 'statisticCards']\n  static values  = { url: String }\n\n  connect() {\n    this.interval()\n  }\n\n  interval(){\n    let controller = this\n    setInterval(function(){\n      controller.showSpin()\n      controller.request()\n   }, 5000);\n  }\n\n  request(){\n    let controller = this\n    fetch(this.urlValue)\n    .then((response) => response.text())\n    .then((html) => {\n      this.statisticCardsTarget.innerHTML = html\n      controller.hideSpin()\n    });\n  }\n\n  showSpin(){\n    this.buttonSpinTarget.classList.replace('hidden', 'block')\n    this.statisticCardsTarget.classList.add('hidden')\n  }\n\n  hideSpin(){\n    this.buttonSpinTarget.classList.replace('block', 'hidden')\n    this.statisticCardsTarget.classList.remove('hidden')\n  }\n}\n"]},"metadata":{},"sourceType":"module"}