{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { Controller } from 'stimulus';\n\nvar _default = /*#__PURE__*/function (_Controller) {\n  _inherits(_default, _Controller);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"calculate\",\n    value: function calculate() {\n      var controller = this;\n      fetch(this.urlValue + \"?amount\" + this.amountTarget.value).then(function (response) {\n        return response.text();\n      }).then(function (content) {\n        debugger;\n        controller.outputTarget.html(content);\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.amountTarget.value = '';\n    }\n  }]);\n\n  return _default;\n}(Controller);\n\n_default.values = {\n  url: String\n};\n_default.targets = [\"amount\", \"output\"];\nexport { _default as default };","map":{"version":3,"sources":["/home/matias/Documentos/prueba-disruptive/app/javascript/controllers/hello_controller.js"],"names":["Controller","controller","fetch","urlValue","amountTarget","value","then","response","text","content","outputTarget","html","values","url","String","targets"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,UAA3B;;;;;;;;;;;;;;;WAME,qBAAY;AACV,UAAIC,UAAU,GAAG,IAAjB;AACAC,MAAAA,KAAK,CAAC,KAAKC,QAAL,GAAgB,SAAhB,GAA4B,KAAKC,YAAL,CAAkBC,KAA/C,CAAL,CACCC,IADD,CACM,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OADN,EAECF,IAFD,CAEM,UAACG,OAAD,EAAa;AACjB;AACAR,QAAAA,UAAU,CAACS,YAAX,CAAwBC,IAAxB,CAA6BF,OAA7B;AACD,OALD;AAMD;;;WAED,iBAAQ;AACN,WAAKL,YAAL,CAAkBC,KAAlB,GAA0B,EAA1B;AACD;;;;EAhB0BL,U;;SACpBY,M,GAAU;AAAEC,EAAAA,GAAG,EAAEC;AAAP,C;SACVC,O,GAAU,CAAE,QAAF,EAAY,QAAZ,C","sourcesContent":["import { Controller } from 'stimulus'; \n\nexport default class extends Controller {\n  static values  = { url: String }\n  static targets = [ \"amount\", \"output\" ]\n\n  calculate() {\n    let controller = this\n    fetch(this.urlValue + \"?amount\" + this.amountTarget.value)\n    .then((response) => response.text())\n    .then((content) => {\n      debugger\n      controller.outputTarget.html(content);\n    });\n  }\n\n  clear() {\n    this.amountTarget.value = ''\n  }\n}"]},"metadata":{},"sourceType":"module"}